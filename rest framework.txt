DJANGO REST FRAMEWORK
1)api view 2)api viewset

model will come in place of models.

normally by serializer and deseralizer
by @api_view() decorator
apiview   //class based view

Genericapiview and mixins
basic authentication and token authentication
viewsets
Genericviewsets  it is same as genericapiview
Modelviewsets     


--------------------------authentication------------------------------
in **basic authentication**:
inside the authorization tab we have to select **basic authentication** and provide the username and password.

in **token authentication** inside the header we have to specify authoriztion and it's token value.
authorization   token <token_value>     //in token authentication

in **jwt authentication** we have to specify the authorization and it's Bearer value.
authorization    Bearer <token_access_value>

api/token/      //is used for accessing the token.
reference -->https://www.geeksforgeeks.org/jwt-authentication-with-django-rest-framework/



class HotelSerializer(serializers.ModelSerializer):
    hotel_product = ProductSerializer(many=True, read_only=True)

    class Meta:
        model = Hotel
        # fields = '__all__'
        fields = ['name', 'address', 'opening_hour', 'hotel_product']
        
        
# http://127.0.0.1:8000/hotel/2/
@api_view(['GET'])
def particular_hotel_products(request, id):
    try:
        hotel_products = Product.objects.filter(hotel_id=id)
    except Hotel.DoesNotExist:
        return Response(status=status.HTTP_404_NOT_FOUND)

    if request.method == 'GET':
        serializer = ProductSerializer(hotel_products, many=True)                //this is the main line.
        return Response(serializer.data)
        
        
        
        
 # http://127.0.0.1:8000/hotel/hview/            for hotel crud operation
# http://127.0.0.1:8000/hotel/2/        for listing all products of partiular hotel.
 # http://127.0.0.1:8000/product/pview/2/                //for crud operations of Product.
 



